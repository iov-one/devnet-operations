apiVersion: v1
kind: Service
# A service allows to expose the pods ports for Ingress/Egress
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: bns
  labels:
    app: bns
    component: validator
spec:
  ports:
  - port: 26657
    name: rpc
  selector:
    app: bns
    component: validator
---
# A loadbalancer service allows to expose the pods ports to the outside world via an IP
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: bns-p2p
  labels:
    app: bns
    component: validator
spec:
  ports:
  - port: 26656
    name: p2p
    targetPort: 26656
  selector:
    app: bns
    component: validator
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bns
  labels:
    app: bns
    component: validator
spec:
  serviceName: bns  
  replicas: 1
  selector:
    matchLabels:
      app: bns
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: bns
        component: validator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: [bns]
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: tm-gen-validator
        imagePullPolicy: IfNotPresent
        image: iov1/tendermint:0.25.0
        env:
        - name: TMHOME
          value: /data/tendermint
        - name: VALIDATOR_POWER
          valueFrom:
            configMapKeyRef:
              name: tm-bns-init-config
              key: validator.power
        - name: VALIDATOR
          valueFrom:
            configMapKeyRef:
              name: tm-bns-init-config
              key: validator              
        command:
          - bash
          - "-c"
        args:
          - |
            set -exo pipefail
            if [ ! -d ${TMHOME}/tmp ]; then
             mkdir -p /data/bns
             mkdir -p ${TMHOME}/tmp
             tendermint init
             cp -f /etc/tendermint/genesis.json ${TMHOME}/config/genesis.json

             # extract pub key and node_id for nginx
             tendermint gen_validator > /data/tendermint/config/priv_validator_work.json
             cat /data/tendermint/config/priv_validator_work.json | jq ".Key" > /data/tendermint/config/priv_validator_key.json
             cat /data/tendermint/config/priv_validator_work.json | jq ".LastSignState" > /data/tendermint/data/priv_validator_state.json
             cat /data/tendermint/config/priv_validator_key.json | jq ".pub_key" | jq ". as \$k | {pub_key: \$k, power: \"$VALIDATOR_POWER\", name: \"$VALIDATOR\"}" > ${TMHOME}/tmp/pub_validator.json
             cat ${TMHOME}/config/genesis.json | jq ".validators |= .+ [$(cat ${TMHOME}/tmp/pub_validator.json)]" > ${TMHOME}/config/genesis.json
             rm -rf ${TMHOME}/tmp
            fi
        volumeMounts:
          - name: tmdir
            mountPath: "/data"
          - mountPath: /etc/tendermint/genesis.json
            name: tm-initialization
            subPath: genesis.json
            readOnly: true
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 100Mi
      - name: bns-init
        imagePullPolicy: IfNotPresent
        image: iov1/bnsd:v0.12.0
        command:
        args:
          - '-home=/data/tendermint'
          - init
          - '-i'
        volumeMounts:
          - name: tmdir
            mountPath: "/data"
        resources:
          limits:
            cpu: 150m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 100Mi
      containers:
      - name: tendermint
        imagePullPolicy: IfNotPresent
        image: iov1/tendermint:0.25.0
        ports:
        - containerPort: 26656
          name: p2p
        - containerPort: 26657
          name: rpc
        env:
        - name: TMHOME
          value: /data/tendermint
        command:
        - bash
        - "-c"
        - |
          set -exo pipefail
          
          if [ -f /data/tendermint/config/addrbook.json ]; then
            # Quick hack: deleting address book to fix stale IP addresses
            rm -f ${TMHOME}/config/addrbook.json
          fi

          # wait for bns to get started
          while [ ! -S /socks/app.sock ]; do
            sleep 1
          done

          exec tendermint node \
            --moniker="`hostname`" \
            --p2p.persistent_peers="" \
            --log_level="p2p:info,state:info,*:error" \
            --proxy_app="unix:///socks/app.sock"
        volumeMounts:
        - name: tmdir
          mountPath: /data/tendermint
          subPath: tendermint
        - mountPath: /etc/tendermint/genesis.json
          name: tm-initialization
          subPath: genesis.json
          readOnly: true
        - mountPath: /etc/tendermint/config.toml
          name: tm-configuration
          subPath: config.toml
          readOnly: true
        - name: socksdir
          mountPath: /socks
        - name: tm-rw-volume
          mountPath: /tmp
        resources:
          limits:
            cpu: 1100m
            memory: 4Gi
          requests:
            cpu: 750m
            memory: 2Gi
        readinessProbe:
          exec:
            command:
            - sh
            - -o
            - pipefail
            - -ec
            - 'curl -s --fail http://localhost:26657/status | jq --exit-status ".result.sync_info.catching_up==false"'
          failureThreshold: 999999
          periodSeconds: 20
          initialDelaySeconds: 40
        livenessProbe:
          exec:
            command:
            - sh
            - -o
            - pipefail
            - -ec
            - 'curl -s --fail http://localhost:26657/abci_info | jq --exit-status ".result.response"'
          failureThreshold: 3
          initialDelaySeconds: 40
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
      - name: bns
        imagePullPolicy: IfNotPresent
        image: iov1/bnsd:v0.12.0
        args:
          - '-home=/data/bns'
          - start
          - '-bind=unix:///socks/app.sock'
        volumeMounts:
        - name: socksdir
          mountPath: /socks
        - name: tmdir
          mountPath: /data/bns
          subPath: bns
        resources:
          limits:
            cpu: 1100m
            memory: 2.5Gi
          requests:
            cpu: 550m
            memory: 512Mi
      volumes:
      - name: tm-initialization
        configMap:
          name: tm-bns-init-config
      - name: tm-configuration
        configMap:
          name: bns-tendermint-config
      - name: socksdir
        emptyDir: {}
      - name: tm-rw-volume
        emptyDir: {}
      - name: nginx-rw-volume
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: tmdir
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: standard
      resources:
        requests:
          storage: 30Gi
