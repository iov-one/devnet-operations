apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: block-metrics-db 
  labels:
    app: block-metrics-db
spec:
  selector:
    matchLabels:
      app: block-metrics-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: block-metrics-db
    spec:
      securityContext:
##        runAsNonRoot: true
        runAsUser: 1000
##        runAsGroup: 2000
##        fsGroup: 2000
      serviceAccountName: bns
      containers:
      - image: postgres:latest
        name: block-metrics-db
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: block-metrics-db-settings
              key: username
        - name: DB_PASS
          valueFrom: 
            secretKeyRef:
              name: block-metrics-db-settings
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: block-metrics-db-settings
              key: dbname
        ports:
        - containerPort: 5432
          name: block-mt-port
##        volumeMounts:
##          - name: block-metrics-storage-volume
##            mountPath: /var/lib/postgresql/data
##      initContainers:
##        - name: pgsql-data-permission-fix
##          image: busybox
##          command: ["/bin/chmod","-R","777", "/data"]
        volumeMounts:
        - name: block-metrics-volume-mount
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      volumes:
      - name: block-metrics-volume-mount
        persistentVolumeClaim:
          claimName: block-metrics-db-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: block-metrics-db-pvc
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: block-metrics-db 
  labels:
    app: block-metrics-db
spec:
  ports:
    - port: 5432
  selector:
    app: block-metrics-db
